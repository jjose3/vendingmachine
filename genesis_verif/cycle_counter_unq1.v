//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /afs/asu.edu/users/j/j/o/jjose3/vendingmachine/vendingmachine/verif/cycle_counter.vp
//  Source template: cycle_counter
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter CycleName 	= multRate_cyc
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

//

// DurationName (_GENESIS2_DECLARATION_PRIORITY_) = None
//
// RateName (_GENESIS2_DECLARATION_PRIORITY_) = None
//
// CycleName (_GENESIS2_INHERITANCE_PRIORITY_) = multRate_cyc
//
// CountName (_GENESIS2_DECLARATION_PRIORITY_) = None
//

//saif_extract
module cycle_counter_unq1 (
		input logic triggerStart ,
		input logic triggerStop ,
		input logic increment ,  
		input logic clk ,
		input logic rst 
		);

   logic signed [63:0] count ;
   logic signed [63:0] duration ;
    
   logic 	       started , stopped ;
   
   // Are we started 
   always_ff @( posedge clk ) begin
      started <= rst ? started || triggerStart : 1'b0 ;
   end

   // Are we stopped
   always_ff @( posedge clk ) begin
      stopped <= rst ? stopped || triggerStop : 1'b0 ;
   end

   // Help debug issues with triggerStop appearing before we have started 
   assert property( @(posedge clk) !triggerStop || ( triggerStop && started )  );

   // Two Counters
   always @( posedge clk ) begin
      // Count the increments
      case ( 1'b1 )
	( !rst ):                             count <= 64'd0 ;
	( started && increment && !stopped ): count <= count + 1 ;
	default:                              count <= count ;
      endcase
      // Count the duration
      case ( 1'b1 )
	( !rst ):                duration <= 64'd0 ;
	( started && !stopped ): duration <= duration + 1 ;
	default:                 duration <= duration ;
      endcase      
   end

   // Report Results
   always @( posedge stopped ) begin
         $display( "!multRate_cyc!:%f" , real'(duration) / real'(count) );
   end

   
   


endmodule
